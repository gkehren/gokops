networks:
  monitoring:
    name: monitoring_network
    driver: bridge
    ipam:
      config:
        - subnet: {{ monitoring_subnet }}

services:
  prometheus:
    image: prom/prometheus:{{ prometheus_version }}
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time={{ prometheus_retention_time }}'
      - '--web.enable-lifecycle'
    ports:
      - "{{ prometheus_port }}:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - monitoring
    restart: unless-stopped

  grafana:
    image: grafana/grafana:{{ grafana_version }}
    container_name: grafana
    ports:
      - "{{ grafana_port }}:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD={{ vault_grafana_admin_password }}
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus

  loki:
    image: grafana/loki:{{ loki_version }}
    container_name: loki
    ports:
      - "{{ loki_port }}:3100"
    volumes:
      - ./loki:/etc/loki
      - loki_data:/loki
    command: -config.file=/etc/loki/loki.yml
    networks:
      - monitoring
    restart: unless-stopped

  promtail:
    image: grafana/promtail:{{ promtail_version }}
    container_name: promtail
    volumes:
      - ./promtail:/etc/promtail
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/promtail.yml
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - loki

  node-exporter:
    image: prom/node-exporter:{{ node_exporter_version }}
    container_name: node-exporter
    ports:
      - "{{ node_exporter_port }}:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:{{ cadvisor_version }}
    container_name: cadvisor
    ports:
      - "{{ cadvisor_port }}:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitoring
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:
  loki_data: